#!/bin/sh
#TODO:
# Create a perl version of this! Nice little learning project I'd say.
# create group (and user?) for chat files so they don't have to be world-writable
# optimize code (too much double work etc.)

SMSG="@SMSG@"
SMSGWHO="@SMSGWHO@"
NETSTAT="@NETSTAT@"
MYNAME=`basename $0`
ROOMDIR="@ROOMDIR@"	#be sure to include a slash at the end!
DFL_ROOM="dfl"
DFL_HOST="localhost"
DFL_PORT=16354
START_PORT=16355

#action 'normal' for roomjoin or roomlist if no roomname given, 'list' for list rooms,
#'info' for info on given roomname
action="normal"
verbose=0
room=""
nick=""

listrooms() {
	echo -n "room             #users"
	if [ $verbose -eq 1 ]; then echo -n "  port   pid   "; fi
	if [ "$1" = "long" ]; then echo -n " members"; fi
	echo ""

	$NETSTAT -ln|grep '^tcp'|cut -d: -f2|awk '{ORS=" ";print $1}'|grep $DFL_PORT >& /dev/null
	if [ $? -eq 0 ]; then
		name="$DFL_ROOM"; port="$DFL_PORT"; pid="-----"
		nmembers=`$SMSGWHO -c $DFL_HOST:$port 2> /dev/null`
		members=`$SMSGWHO $DFL_HOST:$port 2> /dev/null|awk '{ORS=" ";print $1}'`
		printf "%-15s  %-6s" $name $nmembers
		if [ $verbose -eq 1 ]; then printf "  %-5s  %-5s" $port $pid; fi
		if [ "$1" = "long" ]; then echo -n "  $members"; fi
		echo ""
	else
		ls $ROOMDIR/rchat.* >& /dev/null
		if [ $? -eq 1 ]; then
			echo "--- No rooms exist ---"
			return
		fi
	fi
	for i in `ls $ROOMDIR/rchat.* 2> /dev/null`; do
		name=`echo $i|cut -d. -f2`
		port=`sed -n 1p $i`
		pid=`sed -n 2p $i`
		nmembers=`$SMSGWHO -c $DFL_HOST:$port 2> /dev/null`
		if [ $? -ne 0 ]; then
			echo "$name: my crystal ball does not light up"
			continue
		fi
		members=`$SMSGWHO $DFL_HOST:$port 2> /dev/null|awk '{ORS=" ";print $1}'`
		printf "%-15s  %-6s" $name $nmembers
		if [ $verbose -eq 1 ]; then printf "  %-5s  %-5s" $port $pid; fi
		if [ "$1" = "long" ]; then echo -n "  $members"; fi
		echo ""
	done
}

while [ $# -gt 0 ]; do
	i="$1"
	case "$i" in
	-h|-help|--help)
		echo -e "--- smsg room hack v0.1 help ---"
		echo -e "Usage: $MYNAME [roomname] [options]"
		echo -e ""
		echo -e "Available options:"
		echo -e "  -h,--help\t\tdisplay help"
		echo -e "  -v,--verbose\t\tbe verbose (when listing rooms)"
		echo -e "  -l,--list\t\tlist existing rooms"
		echo -e "  -i,--info\t\tdisplay info about specified room"
		echo -e "  -w,--who\t\tdisplay info about specified room"
		echo -e "  -n,--nick\t\tspecify nick to use (your username by default)"
		exit 0
		;;
	-v|-verbose|--verbose) verbose=1;;
	-l|-list|--list) action="list";;
	-i|-info|--info|-w|--who) action="info";;
	-n*|-nick|--nick)
		if [ "$i" = "-a" ]; then
			shift
			nick="$1"
		else
			nick=`echo "$1"|cut -b3-`
		fi
		;;
	-*|--*)
		echo "$MYNAME: unknown option '$i', try -h for help"
		exit 1
		;;
	*) room="$i";;
	esac
	shift
done

case $action in
normal)
	if [ "$room" = "" ]; then
		listrooms long
		echo -n "Choose a room(hit enter to quit): "
		read room
	fi
	room=`echo $room|tr -d '[:cntrl:][:space:]'`
	if [ "$room" = "" ]; then
		exit 1
	fi

	rfile=$ROOMDIR/rchat.$room
	if [ "$room" = "$DFL_ROOM" ]; then
		$NETSTAT -ln|grep '^tcp'|cut -d: -f2|awk '{ORS=" ";print $1}'|grep $DFL_PORT >& /dev/null
		if [ $? -eq 1 ]; then
			echo "Sorry, $DFL_ROOM is reserved, you cannot create it."
			exit 1
		fi
		port=$DFL_PORT
		pid=""
	elif [ ! -s $rfile ]; then
		>"$rfile"
		usedports=`$NETSTAT -ln|grep '^tcp'|cut -d: -f2|awk '{ORS=" ";print $1}'`
		usedports="$DFL_PORT $usedports"	#DFL_PORT must be skipped at all times
		port=$START_PORT
		foundport=0
		while true; do
			echo "$usedports"|grep $port >& /dev/null
			if [ $? -eq 1 ]; then break; fi
			port=$(( $port + 1 ))
			#in fact, port should be set to a low number (like 1024?) if > 65535
		done
		$SMSG server -l1 -L$ROOMDIR/rlog.$room -p$port >> "$ROOMDIR/--tmp.$port--"
		pid=`cat "$ROOMDIR/--tmp.$port--"|sed -n 's/.*pid=\([[:digit:]]*\).*/\1/p'`
		rm "$ROOMDIR/--tmp.$port--"
		echo -e "$port\n$pid">"$rfile"
	fi
	if [ "$room" != "$DFL_ROOM" ]; then
		port=`sed -n 1p $rfile`
		pid=`sed -n 2p $rfile`
	fi

	if [ "$nick" = "" ]; then $SMSG chat -p$port -r$room
	else $SMSG chat -p$port -n$nick -r$room; fi

	if [ $port -ne $DFL_PORT ] && [ `$SMSGWHO -c $DFL_HOST:$port` -eq 0 ]; then
		kill $pid
		rm $rfile
	fi
	;;
list)
	listrooms long
	;;
info)
	if [ "$room" = "" ]; then
		echo "$MYNAME: please give the name of the room you want information about"
		exit 1
	else
		if [ "$room" = "$DFL_ROOM" ]; then
			$NETSTAT -ln|grep '^tcp'|cut -d: -f2|awk '{ORS=" ";print $1}'|grep $DFL_PORT >& /dev/null
			if [ $? -eq 1 ]; then
				echo "$room does not exist"
				exit 0
			fi
		fi
		rfile=$ROOMDIR/rchat.$room
		if [ "$room" = "$DFL_ROOM" ] || [ -s "$rfile" ]; then
			if [ "$room" != "$DFL_ROOM" ]; then
				port=`sed -n 1p $rfile`
				pid=`sed -n 2p $rfile`
			else
				port=$DFL_PORT
				pid="-"
			fi
			echo -n "$room"
			if [ $verbose -eq 1 ]; then
				echo -n " (pid=$pid port=$port)"
			fi
			echo " has the following members:"
			members=`$SMSGWHO $DFL_HOST:$port`
			if [ $? -ne 0 ]; then
				echo "My crystal ball looks misty. This room is broken."
				exit 1
			fi
			echo "nickname         username@host"
			i=0
			while true; do
				i=$(( i + 1 ))
				iv=`echo "$members"|sed -n "${i}p"`
				if [ "$iv" = "" ]; then break; fi
				printf "%-15s  %s\n" `echo $iv|awk '{print $1}'` `echo $iv|awk '{print $2}'`
			done
			unset IFS
		else
			echo "$room does not exist"
		fi
	fi
	;;
esac
